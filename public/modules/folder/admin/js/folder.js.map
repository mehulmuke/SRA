{"version":3,"file":"/Modules/Folder/Assets/admin/js/folder.js","mappings":"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","sources":["webpack:///./Modules/Folder/Resources/assets/admin/js/FolderTree.js","webpack:///./Modules/Folder/Resources/assets/admin/js/app.js","webpack:///./Modules/Folder/Resources/assets/admin/js/FolderForm.js"],"sourcesContent":["export default class {\n    constructor(folderForm, selector) {\n        this.selector = selector;\n\n        $.jstree.defaults.dnd.touch = true;\n        $.jstree.defaults.dnd.copy = false;\n        $.jstree.defaults.dnd.is_draggable  = false;\n        this.fetchFolderTree();\n\n        // On selecting a folder.\n        selector.on('select_node.jstree', (e, node) => folderForm.fetchFolder(node.selected[0]));\n\n        // Expand folders when jstree is loaded.\n        selector.on('loaded.jstree', () => selector.jstree('open_all'));\n\n        // On updating folder tree.\n        $(document).on('dnd_stop.vakata', (e, node) => {\n            setTimeout(() => {\n                this.updateFolderTree(node);\n            }, 100);\n        });\n    }\n\n    fetchFolderTree() {\n        this.selector.jstree({\n            core: {\n                data: { url: route('admin.folders.tree') },\n                check_callback: true,\n            },\n            plugins: ['dnd'],\n        });\n    }\n\n    updateFolderTree(node) {\n        this.loading(node, true);\n\n        $.ajax({\n            type: 'PUT',\n            url: route('admin.folders.tree.update'),\n            data: { folder_tree: this.getFolderTree() },\n            success: (message) => {\n                success(message);\n\n                this.loading(node, false);\n            },\n            error: (xhr) => {\n                error(`${xhr.statusText}: ${xhr.responseJSON.message}`);\n\n                this.loading(node, false);\n            },\n        });\n    }\n\n    getFolderTree() {\n        let folders = this.selector.jstree(true).get_json('#', { flat: true });\n\n        return folders.reduce((formatted, folder) => {\n            return formatted.concat({\n                id: folder.id,\n                parent_id: (folder.parent === '#') ? null : folder.parent,\n                position: folder.data.position,\n            });\n        }, []);\n    }\n\n    loading(node, state) {\n        for (let nodeElement of node.data.obj) {\n            if (state) {\n                $(nodeElement).addClass('jstree-loading');\n            } else {\n                $(nodeElement).removeClass('jstree-loading');\n            }\n        }\n    }\n}\n","import FolderForm from './FolderForm';\n\nnew FolderForm();\n","import FolderTree from './FolderTree';\n\nexport default class {\n    constructor() {\n        let tree = $('.folder-tree');\n\n        new FolderTree(this, tree);\n\n        this.collapseAll(tree);\n        this.expandAll(tree);\n        this.addRootFolder();\n        this.addSubFolder();\n        this.deleteFolder();\n\n        $('#folder-form').on('submit', this.submit);\n    }\n\n    collapseAll(tree) {\n        $('.collapse-all').on('click', (e) => {\n            e.preventDefault();\n\n            tree.jstree('close_all');\n        });\n    }\n\n    expandAll(tree) {\n        $('.expand-all').on('click', (e) => {\n            e.preventDefault();\n\n            tree.jstree('open_all');\n        });\n    }\n\n    addRootFolder() {\n        $('.add-root-folder').on('click', () => {\n            $('.add-sub-folder').addClass('disabled');\n\n            $('.folder-tree').jstree('deselect_all');\n\n            this.clear();\n\n            \n        });\n    }\n\n    addSubFolder() {\n        $('.add-sub-folder').on('click', () => {\n            let selectedId = $('.folder-tree').jstree('get_selected')[0];\n\n            if (selectedId === undefined) {\n                return;\n            }\n\n            this.clear();\n            \n            window.form.appendHiddenInput('#folder-form', 'parent_id', selectedId);\n\n            \n        });\n    }\n\n    deleteFolder() {\n        $('.btn-delete-folder').on('click', (e) => {\n           \n            swal({\n                title: CI.langs['admin::admin.delete.confirmation'],\n                text: CI.langs['admin::admin.delete.confirmation_message'],\n                type: 'warning',\n                buttons:{\n                    cancel: {\n                        visible: true,\n                        text : CI.langs['admin::admin.delete.btn_cancel'],\n                        className: 'btn btn-danger'\n                    },        \t\t\t\n                    confirm: {\n                        text : CI.langs['admin::admin.delete.btn_delete'],\n                        className : 'btn btn-success'\n                    }\n                }\n            }).then((willDelete) => {\n                if (willDelete) {\n                    $('#folders-delete-form').submit();\n                }\n                $('.btn-delete-folder').removeClass('btn-loading');\n                \n            });\n\n        });\n    }\n    fetchFolder(id) {\n        $('.add-sub-folder').removeClass('disabled');\n\n        $.ajax({\n            type: 'GET',\n            url: route('admin.folders.show', id),\n            success: (folder) => {\n                this.update(folder);\n            },\n            error: (xhr) => {\n                error(`${xhr.statusText}: ${xhr.responseJSON.message}`);\n            },\n        });\n    }\n\n    update(folder) {\n        window.form.removeErrors();\n\n        $('.btn-delete-folder').removeClass('d-none');\n        \n        $('.form-group .help-block').remove();\n\n        $('#folders-delete-form').attr('action', route('admin.folders.destroy', folder.id));\n        \n        $('#name').val(folder.name);\n\n        $('#slug').val(folder.slug);\n        $('#slug-field').removeClass('d-none');\n        \n        $('#name').prop('readonly', true);\n        $('#slug').prop('readonly', true); \n        \n        $('#assign_toall').prop('checked', folder.assign_toall);\n        $('#is_active').prop('checked', folder.is_active);\n        $('#public_download').prop('checked', folder.public_download);\n\n        $('#folder-form input[name=\"parent_id\"]').remove();\n    }\n\n    clear() {\n        $('#name').val('');\n\n        $('#slug').val('');\n        $('#slug-field').addClass('d-none');\n        $('#name').prop('readonly', false);\n        $('#slug').prop('readonly', false); \n        $('#assign_toall').prop('checked', false);\n        $('#is_active').prop('checked', false);\n        $('#public_download').prop('checked', false);\n        \n        $('.btn-delete-folder').addClass('d-none');\n        $('.form-group .help-block').remove();\n\n        $('#folder-form input[name=\"parent_id\"]').remove();\n\n    }\n\n    submit(e) {\n        let selectedId = $('.folder-tree').jstree('get_selected')[0];\n\n        if (! $('#slug-field').hasClass('d-none')) {\n            window.form.appendHiddenInput('#folder-form', '_method', 'put');\n\n            $('#folder-form').attr('action', route('admin.folders.update', selectedId));\n        }\n\n        e.currentTarget.submit();\n    }\n}\n"],"names":["folderForm","selector","this","$","jstree","defaults","dnd","touch","copy","is_draggable","fetchFolderTree","on","e","node","fetchFolder","selected","document","setTimeout","updateFolderTree","core","data","url","route","check_callback","plugins","loading","ajax","type","folder_tree","getFolderTree","success","message","error","xhr","statusText","responseJSON","get_json","flat","reduce","formatted","folder","concat","id","parent_id","parent","position","state","obj","nodeElement","addClass","removeClass","tree","FolderTree","collapseAll","expandAll","addRootFolder","addSubFolder","deleteFolder","submit","preventDefault","clear","selectedId","undefined","window","form","appendHiddenInput","swal","title","CI","langs","text","buttons","cancel","visible","className","confirm","then","willDelete","update","removeErrors","remove","attr","val","name","slug","prop","assign_toall","is_active","public_download","hasClass","currentTarget"],"sourceRoot":""}